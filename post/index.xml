<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://zhiyuanpeng.github.io/post/</link>
      <atom:link href="https://zhiyuanpeng.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 13 May 2021 13:59:30 -0700</lastBuildDate>
    <image>
      <url>https://zhiyuanpeng.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>https://zhiyuanpeng.github.io/post/</link>
    </image>
    
    <item>
      <title>Representation of Undirected Graph Models</title>
      <link>https://zhiyuanpeng.github.io/post/representation-of-undirected-graph-models/</link>
      <pubDate>Thu, 13 May 2021 13:59:30 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/representation-of-undirected-graph-models/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;script type=&#34;text/x-mathjax-config&#34;&gt;
MathJax.Hub.Config({
  tex2jax: {
    skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;]
  }
});
&lt;/script&gt;
&lt;p&gt;Koller/Friedman&amp;rsquo;s book &lt;strong&gt;Probabilistic Graphical Models: Principles and Techniques&lt;/strong&gt; &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is the most exhaustive book I have found for PGM, however, there are many definitions, theorems and mathematics within it which make the book hard to understand. When I read this book, I meet many questions like why the potential function is defined on a clique. This post summiarizes my understanding of the representation of undirected graph model part in Koller/Friedman&amp;rsquo;s PGM book. I also brorrow some ideas from Micheal I. Jordan&amp;rsquo;s unfinished book &lt;strong&gt;An Introduction to Probabilistic Graphical Model&lt;/strong&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; to explain why the potential function is defined on a clique.&lt;/p&gt;
&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;
&lt;h2 id=&#34;some-important-concepts&#34;&gt;Some Important Concepts&lt;/h2&gt;
&lt;p&gt;To understand this part in Koler/Friedman&amp;rsquo;s PGM book, we need first clarify some concepts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;completeness: An axiom system is complete if all valid statements can be derived.&lt;/li&gt;
&lt;li&gt;soundness: An axiom system is sound if only valid statements can be derived.&lt;/li&gt;
&lt;li&gt;satisfiability: We say that a truth assignment $I$ satisfies a formula $\varphi$ if $\varphi[I]=\mathrm{T} ;$ we write this as $I \models \varphi$. A formula $\varphi$ is satisfiable if there exists a truth assignment $I$ such that $I \models \varphi$; otherwise $\varphi$ is unsatisfiable.&lt;/li&gt;
&lt;li&gt;validity: A formula $\varphi$ is valid (or a tautology) if for all a truth assignments $I, I \models \varphi$.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;proof-of-exercise-25&#34;&gt;Proof of Exercise 2.5&lt;/h2&gt;
&lt;p&gt;In Koller/Friedman&amp;rsquo;s PGM book, the conclusion of exercise 2.5 is directly used to proof other theorems, so let&amp;rsquo;s do exercise 2.5 firstly.&lt;/p&gt;
&lt;p&gt;Let $X, Y, Z$ be three disjoint subsets of random variables. We say $X$ and $Y$ are conditionally independent given $Z$ if and only if&lt;/p&gt;
&lt;p&gt;$$
\mathbb P_{X, Y \mid Z}(x, y \mid z)=\mathbb P_{X \mid Z}(x \mid z) \mathbb P_{Y \mid Z}(y \mid z)
$$&lt;/p&gt;
&lt;p&gt;Show that $X$ and $Y$ are conditionally independent given $Z$ if and only if the joint distribution for the three subsets of random variables factors in the following form:&lt;/p&gt;
&lt;p&gt;$$
\mathbb P_{X, Y, Z}(x, y, \mid z)=h(x, z) g(y, z))
$$&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;p&gt;Fist, we proof if $X$ and $Y$ are conditionally independent given $Z$, we can get $\mathbb P_{X, Y, Z}(x, y, \mid z)=h(x, z) g(y, z))$ as follows:&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbb P_{X, Y, Z}(x, y, z) &amp;amp;= \mathbb P_{Z}(z) \mathbb P_{X, Y | Z}(x, y | z) \\&lt;br&gt;
&amp;amp;=\mathbb P_{Z}(z) \mathbb P_{X | Z}(x | z) \mathbb P_{Y | Z}(y | z) \\&lt;br&gt;
&amp;amp;=h(x, z) g(y, z)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;where we choose $h(x, z)=\mathbb P_{X \mid Z}(x \mid z)$ and $g(y, z) = \mathbb P_{Y \mid Z}(y \mid z) \mathbb P_{Z}(z)$&lt;/p&gt;
&lt;p&gt;Then, we proof that if we can write $\mathbb P_{X, Y, Z}(x, y, z)$ in this form: $h(x, z) g(y, z))$, we can get $\mathbb P_{X, Y \mid Z}(x, y \mid z)=\mathbb P_{X \mid Z}(x \mid z) \mathbb P_{Y \mid Z}(y \mid z)$:&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbb P_{X, Y \mid Z}(z, y \mid z) &amp;amp;=\frac{\mathbb P_{X, Y, Z}(x, y, z)}{\sum_{x, y} \mathbb P_{X, Y, Z}(x, y, z)} \\&lt;br&gt;
&amp;amp;=\frac{h(x, z) g(y, z)}{\sum_{x, y} h(x, z) g(y, z)} \\&lt;br&gt;
&amp;amp;=\frac{h(x, z)}{h_{1}(z)} \frac{g(y, z)}{ g_{1}(z)} \\&lt;br&gt;
&amp;amp;=\mathbb P_{X \mid Z}(x \mid z) \mathbb P_{Y \mid Z}(y \mid z)
\end{aligned}
$$&lt;/p&gt;
&lt;h1 id=&#34;why-udg-is-defined-on-cliques&#34;&gt;Why UDG is defined on cliques&lt;/h1&gt;
&lt;p&gt;$A&amp;ndash;B&amp;ndash;C$&lt;/p&gt;
&lt;p&gt;From the graph above, we can get $A \bot C \mid B$, so, we don&amp;rsquo;t want $A$ and $C$ in the same potential function. Also, we notice that there is no edge connecting $A$ and $C$ directly. On the other side, if two nodes are connected, we should put them in one potential function. This is the intuition of why UDG is defined on cliques. Actually, if we define the UDG on cliques, we will not violate the independence assumptions induced by the network structure. Next we will explain it in detail.&lt;/p&gt;
&lt;h1 id=&#34;udg-independence&#34;&gt;UDG independence&lt;/h1&gt;
&lt;p&gt;We first copy some crucial definitions from Koller&amp;rsquo;s PGM book:&lt;/p&gt;
&lt;p&gt;definition 4.4:&lt;/p&gt;
&lt;p&gt;We say that a distribution factorizes over a Markov network $\mathcal{H}$ if each $\boldsymbol{D}_{k}(k=1, \ldots, K)$ is a complete subgraph of $\mathcal{H}$.&lt;/p&gt;
&lt;p&gt;definition 4.8:&lt;/p&gt;
&lt;p&gt;Let $\mathcal{H}$ be a Markov network structure, and let $X_{1}-\ldots-X_{k}$ be a path in $\mathcal{H}$. Let $\boldsymbol{Z} \subseteq \mathcal{X}$ be a set of observed variables. The path $X_{1}-\ldots-X_{k}$ is active given $\boldsymbol{Z}$ if none of the $X_{i}$ &amp;rsquo;s, $i=1, \ldots, k$, is in $Z$.&lt;/p&gt;
&lt;p&gt;definition 4.9:&lt;/p&gt;
&lt;p&gt;We say that a set of nodes $\boldsymbol{Z}$ separates $\boldsymbol{X}$ and $\boldsymbol{Y}$ in $\mathcal{H}$, denoted $\operatorname{sep}_{\mathcal{H}}(\boldsymbol{X} ; \boldsymbol{Y} \mid \boldsymbol{Z})$, if there is no active path between any node $X \in X$ and $Y \in \boldsymbol{Y}$ given $\boldsymbol{Z}$. We define the global independencies associated with $\mathcal{H}$ to be:&lt;/p&gt;
&lt;p&gt;$$
\mathcal{I}(\mathcal{H})=\left\{(\boldsymbol{X} \perp \boldsymbol{Y} \mid \boldsymbol{Z}): \operatorname{sep}_{\mathcal{H}}(\boldsymbol{X} ; \boldsymbol{Y} \mid \boldsymbol{Z})\right\}
$$&lt;/p&gt;
&lt;p&gt;For definition 4.9, we want to show that the seperation criterion can detect all the condential independence in distribution $P$ over $H$ which is theorem 4.1:&lt;/p&gt;
&lt;p&gt;Let $P$ be a distribution over $\mathcal{X}$, and $\mathcal{H}$ a Markov network structure over $\mathcal{X}$. If $P$ is a Gibbs distribution that factorizes over $\mathcal{H}$, then $\mathcal{H}$ is an I-map for $P$.&lt;/p&gt;
&lt;p&gt;ProoF Let $\boldsymbol{X}, \boldsymbol{Y}, \boldsymbol{Z}$ be any three disjoint subsets in $\mathcal{X}$ such that $\boldsymbol{Z}$ separates $\boldsymbol{X}$ and $\boldsymbol{Y}$ in $\mathcal{H}$. We want to show that $P \models(\boldsymbol{X} \perp \boldsymbol{Y} \mid \boldsymbol{Z})$.&lt;/p&gt;
&lt;p&gt;We start by considering the case where $\boldsymbol{X} \cup \boldsymbol{Y} \cup \boldsymbol{Z}=\mathcal{X} .$ As $\boldsymbol{Z}$ separates $\boldsymbol{X}$ from $\boldsymbol{Y}$, there are no direct edges between $\boldsymbol{X}$ and $\boldsymbol{Y}$. Hence, any clique in $\mathcal{H}$ is fully contained either in $\boldsymbol{X} \cup \boldsymbol{Z}$ or in $\boldsymbol{Y} \cup \boldsymbol{Z}$. Let $\mathcal{I}&lt;em&gt;{\boldsymbol{X}}$ be the indexes of the set of cliques that are contained in $\boldsymbol{X} \cup \boldsymbol{Z}$, and let $\mathcal{I}&lt;/em&gt;{Y}$ be the indexes of the remaining cliques. We know that&lt;/p&gt;
&lt;p&gt;$$
P\left(X_{1}, \ldots, X_{n}\right)=\frac{1}{Z} \prod_{i \in \mathcal{I}_{\boldsymbol{X}}} \phi_{i}\left(\boldsymbol{D}_{i}\right) \cdot \prod_{i \in \mathcal{I}_{\boldsymbol{Y}}} \phi_{i}\left(\boldsymbol{D}_{i}\right)
$$&lt;/p&gt;
&lt;p&gt;As we discussed, none of the factors in the first product involve any variable in $\boldsymbol{Y}$, and none in the second product involve any variable in $\boldsymbol{X}$. Hence, we can rewrite this product in the form:&lt;/p&gt;
&lt;p&gt;$$
P\left(X_{1}, \ldots, X_{n}\right)=\frac{1}{Z} f(\boldsymbol{X}, \boldsymbol{Z}) g(\boldsymbol{Y}, \boldsymbol{Z})
$$&lt;/p&gt;
&lt;p&gt;From this decomposition, the desired independence follows immediately (exercise 2.5). Now consider the case where $\boldsymbol{X} \cup \boldsymbol{Y} \cup \boldsymbol{Z} \subset \mathcal{X}$. Let $\boldsymbol{U}=\mathcal{X}-(\boldsymbol{X} \cup \boldsymbol{Y} \cup \boldsymbol{Z})$. We can
partition $\boldsymbol{U}$ into two disjoint sets $\boldsymbol{U}&lt;em&gt;{1}$ and $\boldsymbol{U}&lt;/em&gt;{2}$ such that $\boldsymbol{Z}$ separates $\boldsymbol{X} \cup \boldsymbol{U}&lt;em&gt;{1}$ from $\boldsymbol{Y} \cup \boldsymbol{U}&lt;/em&gt;{2}$ in $\mathcal{H}$. Using the preceding argument, we conclude that $P \models\left(\boldsymbol{X}, \boldsymbol{U}&lt;em&gt;{1} \perp \boldsymbol{Y}, \boldsymbol{U}&lt;/em&gt;{2} \mid \boldsymbol{Z}\right)$. Using the
decomposition property $(\boldsymbol{X} \perp \boldsymbol{Y}, \boldsymbol{W} \mid \boldsymbol{Z}) \Longrightarrow(\boldsymbol{X} \perp \boldsymbol{Y} \mid \boldsymbol{Z})$ (equation 2.8), we conclude that $P \models(\boldsymbol{X} \perp \boldsymbol{Y} \mid \boldsymbol{Z})$.&lt;/p&gt;
&lt;!-- The author first give the definition of separation (Definition 4.9), Then the author says &#34;As we will discuss, the independencies in $$I(H)$$ are precisely those that are guaranteed to hold for every distribution $$P$$ over $$H$$. In other words, the separation criterion is sound for detecting independence properties in distributions over $$H$$.&#34; From $$I(H)$$, we can make sure that $$I(H)$$ must in $$I(P)$$, so, it is soundness (Theorem 4.1). The completeness is that &#34;it is not the case that every pair of nodes $$X$$ and $$Y$$ that are not separated in H are dependent in every distribution P which factorizes over H&#34;. --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Koller, D., &amp;amp; Friedman, N. (2009). Probabilistic graphical models: principles and techniques. MIT press. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Jordan, M. I. (2003). An introduction to probabilistic graphical models. &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Logic</title>
      <link>https://zhiyuanpeng.github.io/post/logic/</link>
      <pubDate>Tue, 04 May 2021 00:28:14 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/logic/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;h1 id=&#34;syntactic-consequence-vs-semantic-consequencehttpsphilosophystackexchangecoma72646&#34;&gt;&lt;a href=&#34;https://philosophy.stackexchange.com/a/72646&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Syntactic consequence vs Semantic consequence&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Syntactic consequence (A ⊢ B): B can be derived from A without even knowing if A is true. For example, &amp;lsquo;A implies B&amp;rsquo; can be converted to &amp;lsquo;notA or B&amp;rsquo;, regardless if &amp;lsquo;A implies B&amp;rsquo; was true or false. It&amp;rsquo;s a syntactic consequence. The model (all possible ways to get A to be true) doesn&amp;rsquo;t matter because truth doesn&amp;rsquo;t matter, because A being true doesn&amp;rsquo;t even matter.&lt;/p&gt;
&lt;p&gt;Semantic consequence (C |= D): Whenever C is true, then D is true.&lt;/p&gt;
&lt;p&gt;What is a model?: A model is just one combination of symbols that make the well-formed formula to be true: we have 3 possible models in A ∨ B, which are A=true,B=false, A=false,B=true and A=true,B=true. If whenever the left side (C) of semantic consequence is true, D is also true, then C semantically entails D.&lt;/p&gt;
&lt;h1 id=&#34;propositional-logic-and-first-order-logic&#34;&gt;Propositional Logic and First Order Logic&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/https://courses.cs.cornell.edu/cs2800/2017sp/handouts/pass_tseng_discmath.pdf&#34;&gt;A Course in Discrete Structures&lt;/a&gt; gives basic explaintion of the two kinds of logic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu QA</title>
      <link>https://zhiyuanpeng.github.io/post/ubuntu-qa/</link>
      <pubDate>Mon, 05 Apr 2021 12:18:28 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/ubuntu-qa/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;h1 id=&#34;ubuntu-kernal-panic-when-reboot-or-poweroff&#34;&gt;Ubuntu kernal panic when reboot or poweroff&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo -H gedit /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet initcall_blacklist=dw_i2c_init_driver&amp;quot;
sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, reboot the system.&lt;/p&gt;
&lt;h1 id=&#34;matlab&#34;&gt;Matlab&lt;/h1&gt;
&lt;h2 id=&#34;hidpi&#34;&gt;HIDPI&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;s = settings;s.matlab.desktop.DisplayScaleFactor
s.matlab.desktop.DisplayScaleFactor.PersonalValue = 2.5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;matlab-luncher&#34;&gt;Matlab luncher&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install matlab-support
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Wowchemy Tips</title>
      <link>https://zhiyuanpeng.github.io/post/wowchemy-tips/</link>
      <pubDate>Mon, 05 Apr 2021 12:13:38 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/wowchemy-tips/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;h1 id=&#34;set-up-env-on-ununtu&#34;&gt;Set up Env on Ununtu&lt;/h1&gt;
&lt;h2 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download&lt;/a&gt; the &lt;strong&gt;Extended&lt;/strong&gt; installer for Debian (hugo_extended_&lt;VERSION&gt;_Linux-64bit.deb) and double-click the downloaded file to install with Ubuntu Software Center.&lt;/p&gt;
&lt;p&gt;Install Hugo’s Go dependency:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo snap install --classic go
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;create-a-new-posthttpswowchemycomdocscontentblog-posts&#34;&gt;&lt;a href=&#34;https://wowchemy.com/docs/content/blog-posts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create a new post&lt;/a&gt;&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;hugo new  --kind post post/my-article-name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use lower case for my-article-name and change the title in index.md&lt;/p&gt;
&lt;h1 id=&#34;update-the-website&#34;&gt;Update the Website&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;hugo
cd public
git add .
git commit -m &amp;quot;Build website&amp;quot;
git push origin master
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;update-the-publicationshttpswowchemycomdocscontentpublications&#34;&gt;&lt;a href=&#34;https://wowchemy.com/docs/content/publications/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update the Publications&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Install the Academic&amp;rsquo;s admin tool:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip3 install -U academic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no pip3 installed, install pip3 first:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install python3-pip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import the bibtex:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;academic import --bibtex &amp;lt;path_to_your/publications.bib&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Deploy a Website on EC2</title>
      <link>https://zhiyuanpeng.github.io/post/deploy-website-on-ec2/</link>
      <pubDate>Mon, 15 Feb 2021 21:10:42 -0800</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/deploy-website-on-ec2/</guid>
      <description>&lt;style&gt;
body {
text-align: justify}
&lt;/style&gt;
&lt;h1 id=&#34;install-packages&#34;&gt;Install Packages&lt;/h1&gt;
&lt;p&gt;Use Anaconda to create a python3 environment, then, use the following commands to install apache2 and wsgi&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo apt update
sudo apt install apache2
sudo apt-get install libapache2-mod-wsgi-py3
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;configure-site&#34;&gt;Configure Site&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo ln -sT /project/path/of/website /var/www/html/website
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Link the project to the folder under &lt;code&gt;/var/www/html&lt;/code&gt;. &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt; can be used to debug the website.&lt;/p&gt;
&lt;h1 id=&#34;configure-ssl&#34;&gt;Configure SSL&lt;/h1&gt;
&lt;p&gt;First open ssl use the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo a2enmod ssl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the /etc/apache2/site-enables/.conf like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;VirtualHost *:443&amp;gt;
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request&#39;s Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        ServerName https://semanticsearch.site
        ServerAlias semanticsearch.site
        DocumentRoot /var/www/html
        SSLEngine on
        SSLCertificateFile /home/ubuntu/SSL/5191072_www.semanticsearch.site_public.crt
        SSLCertificateKeyFile /home/ubuntu/SSL/5191072_www.semanticsearch.site.key
        SSLCertificateChainFile /home/ubuntu/SSL/5191072_www.semanticsearch.site_chain.crt

        WSGIDaemonProcess SSApp python-path=/home/ubuntu/anaconda3/envs/py38/lib/python3.8/site-packages
        WSGIScriptAlias / /var/www/html/SSApp/ssapp.wsgi
        WSGIProcessGroup SSApp
        WSGIApplicationGroup %{GLOBAL}
        &amp;lt;Directory /var/www/html/SSApp&amp;gt;
                #WSGIProcessGroup SSApp
                #WSGIApplicationGroup %{GLOBAL}
                Order allow,deny
                Allow from all
        &amp;lt;/Directory&amp;gt;


        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with &amp;quot;a2disconf&amp;quot;.
        #Include conf-available/serve-cgi-bin.conf
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;use &lt;code&gt;apachectl configtest&lt;/code&gt; to check the syntax of the conf file and then restart the apache service &lt;code&gt;sudo service apache2 restart&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;change-the-permission-of-the-folder&#34;&gt;Change the Permission of the Folder&lt;/h1&gt;
&lt;p&gt;I use the following bash file to deloy the website on server.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;git clone git@github.com:SemanticSearching/SSApp.git
cd /home/ubuntu/proj/SSApp
git checkout dev
sudo chown -vR :ssapp /home/ubuntu/proj/SSApp/
sudo chmod -vR g+w /home/ubuntu/proj/SSApp/
sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
