<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://zhiyuanpeng.github.io/post/</link>
      <atom:link href="https://zhiyuanpeng.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 05 Apr 2021 12:18:28 -0700</lastBuildDate>
    <image>
      <url>https://zhiyuanpeng.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>https://zhiyuanpeng.github.io/post/</link>
    </image>
    
    <item>
      <title>Ubuntu QA</title>
      <link>https://zhiyuanpeng.github.io/post/ubuntu-qa/</link>
      <pubDate>Mon, 05 Apr 2021 12:18:28 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/ubuntu-qa/</guid>
      <description>&lt;h2 id=&#34;ubuntu-kernal-panic-when-reboot-or-poweroff&#34;&gt;Ubuntu kernal panic when reboot or poweroff&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo -H gedit /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet initcall_blacklist=dw_i2c_init_driver&amp;quot;
sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, reboot the system.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wowchemy Tips</title>
      <link>https://zhiyuanpeng.github.io/post/wowchemy-tips/</link>
      <pubDate>Mon, 05 Apr 2021 12:13:38 -0700</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/wowchemy-tips/</guid>
      <description>&lt;h1 id=&#34;set-up-env-on-ununtu&#34;&gt;Set up Env on Ununtu&lt;/h1&gt;
&lt;h2 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download&lt;/a&gt; the &lt;strong&gt;Extended&lt;/strong&gt; installer for Debian (hugo_extended_&lt;VERSION&gt;_Linux-64bit.deb) and double-click the downloaded file to install with Ubuntu Software Center.&lt;/p&gt;
&lt;p&gt;Install Hugoâ€™s Go dependency:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo snap install --classic go
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;create-a-new-posthttpswowchemycomdocscontentblog-posts&#34;&gt;&lt;a href=&#34;https://wowchemy.com/docs/content/blog-posts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create a new post&lt;/a&gt;&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;hugo new  --kind post post/my-article-name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use lower case for my-article-name and change the title in index.md&lt;/p&gt;
&lt;h1 id=&#34;update-the-website&#34;&gt;Update the Website&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;hugo
cd public
git add .
git commit -m &amp;quot;Build website&amp;quot;
git push origin master
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;update-the-publicationshttpswowchemycomdocscontentpublications&#34;&gt;&lt;a href=&#34;https://wowchemy.com/docs/content/publications/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update the Publications&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Install the Academic&amp;rsquo;s admin tool:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip3 install -U academic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no pip3 installed, install pip3 first:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install python3-pip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import the bibtex:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;academic import --bibtex &amp;lt;path_to_your/publications.bib&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Deploy a Website on EC2</title>
      <link>https://zhiyuanpeng.github.io/post/deploy-website-on-ec2/</link>
      <pubDate>Mon, 15 Feb 2021 21:10:42 -0800</pubDate>
      <guid>https://zhiyuanpeng.github.io/post/deploy-website-on-ec2/</guid>
      <description>&lt;h1 id=&#34;install-packages&#34;&gt;Install Packages&lt;/h1&gt;
&lt;p&gt;Use Anaconda to create a python3 environment, then, use the following commands to install apache2 and wsgi&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo apt update
sudo apt install apache2
sudo apt-get install libapache2-mod-wsgi-py3
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;configure-site&#34;&gt;Configure Site&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo ln -sT /project/path/of/website /var/www/html/website
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Link the project to the folder under &lt;code&gt;/var/www/html&lt;/code&gt;. &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt; can be used to debug the website.&lt;/p&gt;
&lt;h1 id=&#34;configure-ssl&#34;&gt;Configure SSL&lt;/h1&gt;
&lt;p&gt;First open ssl use the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo a2enmod ssl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the /etc/apache2/site-enables/.conf like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;VirtualHost *:443&amp;gt;
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request&#39;s Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        ServerName https://semanticsearch.site
        ServerAlias semanticsearch.site
        DocumentRoot /var/www/html
        SSLEngine on
        SSLCertificateFile /home/ubuntu/SSL/5191072_www.semanticsearch.site_public.crt
        SSLCertificateKeyFile /home/ubuntu/SSL/5191072_www.semanticsearch.site.key
        SSLCertificateChainFile /home/ubuntu/SSL/5191072_www.semanticsearch.site_chain.crt

        WSGIDaemonProcess SSApp python-path=/home/ubuntu/anaconda3/envs/py38/lib/python3.8/site-packages
        WSGIScriptAlias / /var/www/html/SSApp/ssapp.wsgi
        WSGIProcessGroup SSApp
        WSGIApplicationGroup %{GLOBAL}
        &amp;lt;Directory /var/www/html/SSApp&amp;gt;
                #WSGIProcessGroup SSApp
                #WSGIApplicationGroup %{GLOBAL}
                Order allow,deny
                Allow from all
        &amp;lt;/Directory&amp;gt;


        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with &amp;quot;a2disconf&amp;quot;.
        #Include conf-available/serve-cgi-bin.conf
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;use &lt;code&gt;apachectl configtest&lt;/code&gt; to check the syntax of the conf file and then restart the apache service &lt;code&gt;sudo service apache2 restart&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;change-the-permission-of-the-folder&#34;&gt;Change the Permission of the Folder&lt;/h1&gt;
&lt;p&gt;I use the following bash file to deloy the website on server.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;git clone git@github.com:SemanticSearching/SSApp.git
cd /home/ubuntu/proj/SSApp
git checkout dev
sudo chown -vR :ssapp /home/ubuntu/proj/SSApp/
sudo chmod -vR g+w /home/ubuntu/proj/SSApp/
sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
